<?php
//        ..／＞...フ
//　　　　　| 　_　 _|
//　 　　　／`ミ _x 彡
//　　 　 /　　　 　 |
//　　　 /　 ヽ　　 ﾉ
//　／￣|　　 |　|　|
//　| (￣ヽ＿_ヽ_)_)

/**
 * @file
 * Main file for custom hooks and functions.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\Entity\NodeType;
use Drupal\node\NodeInterface;

function blog_theme($existing, $type, $theme, $path)
{
  return [
    'blog_previous_next' => [
      'variables' => [
        'entity' => null,
      ],
      'file' => 'blog.theme.inc',
    ],
  ];
}

/**
 * Implements hook_entity_extra_field_info().
 */
function blog_entity_extra_field_info()
{
  $extra = [];

  foreach (NodeType::loadMultiple() as $bundle) {
    $extra['node'][$bundle->id()]['display']['previous_next'] = [
      'label' => t('Buttons to previous and next entity'),
      'weight' => 100,
      'visible' => FALSE,
    ];
  }

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */

function blog_node_view(array &$build, NodeInterface $node, EntityViewDisplayInterface $display, $view_mode)
{
  if ($display->getComponent('previous_next')) {
    $build['previous_next'] = [
      '#theme' => 'blog_previous_next',
      '#entity' => $node,
    ];
  }
}




